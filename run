#!/bin/bash
set -euo pipefail
IFS=$'\n\t'
trap 'echo FATAL ERROR EXIT CODE $? AT $0:$LINENO' ERR


which make || sudo apt-get install -y build-essential

# note: as a workaround to
# https://stackoverflow.com/questions/74350584/nvcc-compilation-error-using-thrust-in-cuda-11-5
# > /usr/include/c++/11/bits/std_function.h:435:145: error: parameter packs not expanded with ‘...’:
# >   435 |         function(_Functor&& __f)
# >       |                                                                                                                                                 ^ 
# > /usr/include/c++/11/bits/std_function.h:435:145: note:         ‘_ArgTypes’
# > /usr/include/c++/11/bits/std_function.h:530:146: error: parameter packs not expanded with ‘...’:
# >   530 |         operator=(_Functor&& __f)
# >       |                                                                                                                                                  ^ 
# > /usr/include/c++/11/bits/std_function.h:530:146: note:         ‘_ArgTypes’
# it seems a version if nvcc > 11.5 is required; 11.8 seems good, I did not yet get it to work with 12.3...
export PATH="/usr/local/cuda-11.8/bin:$PATH"
which nvcc || ./scripts/install-cuda # sudo apt-get install -y nvidia-cuda-toolkit

# should not be necessary...? yes it should: https://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html#post-installation-actions
#export PATH="/usr/local/cuda-12.3/bin:$PATH"
export PATH="/usr/local/cuda-11.8/bin:$PATH"
nvcc --version


openni2d='OpenNI-Linux-x64-2.2'
if ! test -d "$openni2d" ; then
    openni2='OpenNI-Linux-x64-2.2.0.33'
    pushd lib
    #wget --no-clobber https://s3.amazonaws.com/com.occipital.openni/$openni2.tar.bz2
    popd

    cp --verbose ./lib/$openni2.tar.bz2 .
    tar xvf $openni2.tar.bz2
fi

which cmake || sudo apt-get install -y cmake
sudo apt-get install -y freeglut3-dev

cd InfiniTAM

export CUDA_CUDART_LIBRARY=/usr/local/cuda-11.8/lib64/libcudart.so
export CUDA_TOOLKIT_INCLUDE=/usr/local/cuda-11.8/include

#rm -rf CMakeFiles # cmake "$(realpath .)" --target clean
git clean -fX
cmake "$(realpath .)" -DOPEN_NI_ROOT="$(realpath ../$openni2d)" -DCUDA_CUDART_LIBRARY=$CUDA_CUDART_LIBRARY -DCUDA_TOOLKIT_INCLUDE=$CUDA_TOOLKIT_INCLUDE 
make clean
make

#make clean
# this should also work:
#./build-nix.sh 'Unix Makefiles' Debug

./InfiniTAM/Apps/InfiniTAM_cli/InfiniTAM_cli Teddy/calib.txt Teddy/Frames/%04i.ppm Teddy/Frames/%04i.pgm

./InfiniTAM/Apps/InfiniTAM/InfiniTAM Teddy/calib.txt Teddy/Frames/%04i.ppm Teddy/Frames/%04i.pgm


